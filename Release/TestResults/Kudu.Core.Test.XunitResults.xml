<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="C:\Users\imrandev\Desktop\Kudu\kudu\Kudu.Core.Test\bin\Release\Kudu.Core.Test.DLL" environment="32-bit .NET 4.0.30319.42000 [collection-per-assembly, parallel]" test-framework="xUnit.net 2.0.0.2929" run-date="2017-08-29" run-time="11:21:42" config-file="C:\Users\imrandev\Desktop\Kudu\kudu\Kudu.Core.Test\bin\Release\Kudu.Core.Test.dll.config" total="472" passed="472" failed="0" skipped="0" time="35.781" errors="0">
    <errors />
    <collection total="472" passed="472" failed="0" skipped="0" name="Test collection for Kudu.Core.Test.DLL" time="34.905">
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.SetPrivateKeyCreatesSSHDirectoryIfItDoesNotExist" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="SetPrivateKeyCreatesSSHDirectoryIfItDoesNotExist" time="0.6860229" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetSSHKeyNoOpsIfPublicKeyPairIsNotFoundAndEnsurePublicKeyIsNotSet" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetSSHKeyNoOpsIfPublicKeyPairIsNotFoundAndEnsurePublicKeyIsNotSet" time="0.0182009" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetSSHEncodedStringEncodesPublicKey" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetSSHEncodedStringEncodesPublicKey" time="0.0033394" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.ConstructorThrowsIfEnvironmentIsNull" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="ConstructorThrowsIfEnvironmentIsNull" time="0.0042261" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetSSHKeyReturnsPublicKeyIfItExists(ensurePublicKey: True)" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetSSHKeyReturnsPublicKeyIfItExists" time="0.0081592" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetSSHKeyReturnsPublicKeyIfItExists(ensurePublicKey: False)" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetSSHKeyReturnsPublicKeyIfItExists" time="0.00278" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetSSHKeyCreatesKeyIfPublicAndPrivateKeyDoesNotAlreadyExistAndEnsurePublicKeyIsSet" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetSSHKeyCreatesKeyIfPublicAndPrivateKeyDoesNotAlreadyExistAndEnsurePublicKeyIsSet" time="0.7800924" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.SetPrivateKeySetsByPassKeyCheckAndKeyIfFile" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="SetPrivateKeySetsByPassKeyCheckAndKeyIfFile" time="0.0138333" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetPEMEncodedStringEncodesPrivateKey" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetPEMEncodedStringEncodesPrivateKey" time="0.0013577" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetSSHKeyReturnsExistingKeyIfPresentOnDisk(ensurePublicKey: True)" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetSSHKeyReturnsExistingKeyIfPresentOnDisk" time="0.0086045" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.GetSSHKeyReturnsExistingKeyIfPresentOnDisk(ensurePublicKey: False)" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="GetSSHKeyReturnsExistingKeyIfPresentOnDisk" time="0.0026836" result="Pass" />
      <test name="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts.SetPrivateKeyAllowsRepeatedInvocation" type="Kudu.Core.SSHKey.Test.SSHKeyManagerFacts" method="SetPrivateKeyAllowsRepeatedInvocation" time="0.1001849" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ProgressWriterFacts.ProgressWriter_Generates_ExpectedOutput" type="Kudu.Core.Infrastructure.Test.ProgressWriterFacts" method="ProgressWriter_Generates_ExpectedOutput" time="2.3377424" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ProgressWriterFacts.ProgressWriter_Dispose" type="Kudu.Core.Infrastructure.Test.ProgressWriterFacts" method="ProgressWriter_Dispose" time="2.2704501" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.DisposableActionFacts.DisposableActionInvokesActionOnDisposing" type="Kudu.Core.Infrastructure.Test.DisposableActionFacts" method="DisposableActionInvokesActionOnDisposing" time="0.0006683" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts.AddToPathAddsPathEnvironmentValueIfItDoesNotExist" type="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts" method="AddToPathAddsPathEnvironmentValueIfItDoesNotExist" time="0.001535" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts.AddToPathAppendsPathEnvironmentValue(current: &quot;c:\foo;c:\windows\Microsoft.net\framework&quot;, input: [&quot;x:\path1&quot;, &quot;y:\path1\path2&quot;], expected: &quot;x:\path1;y:\path1\path2;c:\foo;c:\windows\Microsof&quot;...)" type="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts" method="AddToPathAppendsPathEnvironmentValue" time="0.0003866" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts.AddToPathAppendsPathEnvironmentValue(current: &quot;c:\foo;c:\windows\Microsoft.net\framework;&quot;, input: [&quot;x:\path1&quot;, &quot;y:\path1\path2&quot;], expected: &quot;x:\path1;y:\path1\path2;c:\foo;c:\windows\Microsof&quot;...)" type="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts" method="AddToPathAppendsPathEnvironmentValue" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts.AddToPathAppendsPathEnvironmentValue(current: &quot;c:\foo;c:\windows\Microsoft.net\framework\;&quot;, input: [&quot;x:\path1&quot;, &quot;y:\path1\path2\&quot;], expected: &quot;x:\path1;y:\path1\path2\;c:\foo;c:\windows\Microso&quot;...)" type="Kudu.Core.Infrastructure.Test.ExecutableExtensionsFacts" method="AddToPathAppendsPathEnvironmentValue" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.OperationManagerFacts.AttemptRetriesAtMostSpecifiedTimesIfActionThrows" type="Kudu.Core.Infrastructure.Test.OperationManagerFacts" method="AttemptRetriesAtMostSpecifiedTimesIfActionThrows" time="0.033798" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.OperationManagerFacts.AttemptExecutesAction" type="Kudu.Core.Infrastructure.Test.OperationManagerFacts" method="AttemptExecutesAction" time="0.0004573" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.OperationManagerFacts.AttemptReturnsValuesIfMethodSucceeds" type="Kudu.Core.Infrastructure.Test.OperationManagerFacts" method="AttemptReturnsValuesIfMethodSucceeds" time="0.036752" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ServerConfigurationFacts.ServerConfigurationNoneSet" type="Kudu.Core.Infrastructure.Test.ServerConfigurationFacts" method="ServerConfigurationNoneSet" time="0.0052611" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ServerConfigurationFacts.ServerConfigurationWebSiteNameSet" type="Kudu.Core.Infrastructure.Test.ServerConfigurationFacts" method="ServerConfigurationWebSiteNameSet" time="0.0010121" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.ServerConfigurationFacts.ServerConfigurationAppPoolIdNameSet" type="Kudu.Core.Infrastructure.Test.ServerConfigurationFacts" method="ServerConfigurationAppPoolIdNameSet" time="0.0008918" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadIntReadsFullIntegerValues(input: &quot;&quot;, expected: 0)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadIntReadsFullIntegerValues" time="0.0060983" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadIntReadsFullIntegerValues(input: &quot;Abc&quot;, expected: 0)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadIntReadsFullIntegerValues" time="0.0001208" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadIntReadsFullIntegerValues(input: &quot;123 Abc&quot;, expected: 123)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadIntReadsFullIntegerValues" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadIntReadsFullIntegerValues(input: &quot;123Abc&quot;, expected: 123)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadIntReadsFullIntegerValues" time="0.0000107" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadIntReadsFullIntegerValues(input: &quot;123&quot;, expected: 123)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadIntReadsFullIntegerValues" time="0.0000107" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadReadsCharacter(input: &quot;Hello&quot;, expected1: 'H', expected2: 'e')" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadReadsCharacter" time="0.0062123" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadReadsCharacter(input: &quot;H&quot;, expected1: 'H', expected2: '\0')" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadReadsCharacter" time="0.0000119" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadReadsCharacter(input: &quot;&quot;, expected1: '\0', expected2: '\0')" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadReadsCharacter" time="0.0000102" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfString(input: &quot;Hello&quot;, searchString: &quot;llo&quot;, expected: &quot;He&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfString" time="0.0012089" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfString(input: &quot;ab&quot;, searchString: &quot;abcd&quot;, expected: &quot;ab&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfString" time="0.0000102" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfString(input: &quot;Hello&quot;, searchString: &quot;Hello&quot;, expected: &quot;&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfString" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfString(input: &quot;Hello&quot;, searchString: &quot;abcd&quot;, expected: &quot;Hello&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfString" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfString(input: &quot;Hello&quot;, searchString: &quot;el&quot;, expected: &quot;H&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfString" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ConstructorThrowsIfStringIsNull" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ConstructorThrowsIfStringIsNull" time="0.0016879" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadReadsExactlyNCharacters(input: &quot;Hell&quot;, expected1: null, expected2: null)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadReadsExactlyNCharacters" time="0.0004459" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadReadsExactlyNCharacters(input: &quot;Hello&quot;, expected1: &quot;Hello&quot;, expected2: null)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadReadsExactlyNCharacters" time="0.0000096" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadReadsExactlyNCharacters(input: &quot;Helloworld&quot;, expected1: &quot;Hello&quot;, expected2: &quot;world&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadReadsExactlyNCharacters" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.SkipNWorks(input: &quot;abcd&quot;, n: 3, expected: 'd')" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="SkipNWorks" time="0.0003494" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.SkipNWorks(input: &quot;cd&quot;, n: 4, expected: '\0')" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="SkipNWorks" time="0.0000125" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilWhiteSpaceWorks(input: &quot;Ab  &quot;, expected: &quot;Ab&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilWhiteSpaceWorks" time="0.0005776" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilWhiteSpaceWorks(input: &quot; abc&quot;, expected: &quot;&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilWhiteSpaceWorks" time="0.0000102" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilWhiteSpaceWorks(input: &quot;Ab cdef &quot;, expected: &quot;Ab&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilWhiteSpaceWorks" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilWhiteSpaceWorks(input: &quot;&quot;, expected: null)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilWhiteSpaceWorks" time="0.0000079" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.SkipWorks(input: &quot;abcd&quot;, expected: 'b', done: False)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="SkipWorks" time="0.0040852" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.SkipWorks(input: &quot;cd&quot;, expected: 'd', done: True)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="SkipWorks" time="0.0000245" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ToStringReturnsReaminingString" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ToStringReturnsReaminingString" time="0.0003061" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadLineReadsUntilFirstNewLineCharacter(input: &quot;Hello&#xA;World&quot;, expected: &quot;Hello&#xA;&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadLineReadsUntilFirstNewLineCharacter" time="0.000159" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadLineReadsUntilFirstNewLineCharacter(input: &quot;Hello&#xA;World&#xD;&#xA;&quot;, expected: &quot;Hello&#xA;&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadLineReadsUntilFirstNewLineCharacter" time="0.0000108" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadLineReadsUntilFirstNewLineCharacter(input: &quot;&quot;, expected: null)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadLineReadsUntilFirstNewLineCharacter" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadLineReadsUntilFirstNewLineCharacter(input: &quot;Hello&#xD;World&quot;, expected: &quot;Hello&#xD;World&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadLineReadsUntilFirstNewLineCharacter" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadLineReadsUntilFirstNewLineCharacter(input: &quot;Hello&#xD;&#xA;World&quot;, expected: &quot;Hello&#xD;&#xA;&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadLineReadsUntilFirstNewLineCharacter" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.SkipStringWorks(input: &quot;abcd&quot;, skip: &quot;ab&quot;, expected: &quot;cd&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="SkipStringWorks" time="0.0004624" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.SkipStringWorks(input: &quot;abcd&quot;, skip: &quot;abd&quot;, expected: &quot;abcd&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="SkipStringWorks" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.SkipStringWorks(input: &quot;abcd&quot;, skip: &quot;abcd&quot;, expected: null)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="SkipStringWorks" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfSpecifiedCharacter(input: &quot;Hello&quot;, ch: 'e', expected: &quot;H&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfSpecifiedCharacter" time="0.0002035" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfSpecifiedCharacter(input: &quot;Hello&quot;, ch: 'l', expected: &quot;He&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfSpecifiedCharacter" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadUntilReadsUntilItEncountersFirstInstanceOfSpecifiedCharacter(input: &quot;Hello&quot;, ch: 'z', expected: &quot;Hello&quot;)" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadUntilReadsUntilItEncountersFirstInstanceOfSpecifiedCharacter" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.StringReaderFacts.ReadToEndReadsTheEntireString" type="Kudu.Core.Infrastructure.Test.StringReaderFacts" method="ReadToEndReadsTheEntireString" time="0.0001915" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.VsSolutionFacts.PathPropertyReturnsInputFilePath" type="Kudu.Core.Infrastructure.Test.VsSolutionFacts" method="PathPropertyReturnsInputFilePath" time="0.0166731" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.VsSolutionFacts.VsSolutionParserReadsWebsiteDetails(solutionFileContent: &quot;&#xD;&#xA;Microsoft Visual Studio Solution File, Format Ve&quot;..., absolutePath: &quot;x:\release-path\WebSite1\&quot;)" type="Kudu.Core.Infrastructure.Test.VsSolutionFacts" method="VsSolutionParserReadsWebsiteDetails" time="0.2206641" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.VsSolutionFacts.VsSolutionParserReadsWebsiteDetails(solutionFileContent: &quot;&#xD;&#xA;Microsoft Visual Studio Solution File, Format Ve&quot;..., absolutePath: &quot;x:\debug-path\WebSite1\&quot;)" type="Kudu.Core.Infrastructure.Test.VsSolutionFacts" method="VsSolutionParserReadsWebsiteDetails" time="0.001677" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.VsSolutionFacts.VsSolutionParsesSolutionFile" type="Kudu.Core.Infrastructure.Test.VsSolutionFacts" method="VsSolutionParsesSolutionFile" time="0.0021075" result="Pass" />
      <test name="Kudu.Core.Infrastructure.Test.VsSolutionFacts.VsSolutionParserReadsProjectDetails" type="Kudu.Core.Infrastructure.Test.VsSolutionFacts" method="VsSolutionParserReadsProjectDetails" time="0.0843836" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;package.json&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0149054" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;requirements.txt&quot;, &quot;site.aspx&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0032606" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;app.js&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.001932" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.001015" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: True, existingFiles: [&quot;requirements.txt&quot;, &quot;runtime.txt&quot;], runtimeTxtBytes: &quot;python-3.4.1&quot;)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0064051" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;index.php&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.00177" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;requirements.txt&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0018469" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;site.aspx&quot;, &quot;index2.aspx&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0025079" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;server.js&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0017415" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;requirements.txt&quot;, &quot;runtime.txt&quot;], runtimeTxtBytes: &quot;i run all the time&quot;)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0028027" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: True, existingFiles: [&quot;requirements.txt&quot;, &quot;app.py&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0024635" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;site.aspx&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0016525" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests.TestLooksLikePython(looksLikePythonExpectedResult: False, existingFiles: [&quot;requirements.txt&quot;, &quot;default.asp&quot;], runtimeTxtBytes: null)" type="Kudu.Core.Deployment.Generator.Test.PythonSiteEnablerTests" method="TestLooksLikePython" time="0.0025034" result="Pass" />
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;server.js&quot;, &quot;iisstart.htm&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0113589" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: server.js, iisstart.htm
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: True, existingFiles: [&quot;package.json&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0011781" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: package.json
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: True, existingFiles: [&quot;package.json&quot;, &quot;site.aspx&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0018938" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: package.json, site.aspx
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0003136" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: 
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;site.aspx&quot;, &quot;index2.aspx&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0019206" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: site.aspx, index2.aspx
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;index.php&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0011028" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: index.php
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: True, existingFiles: [&quot;app.js&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0013719" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: app.js
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;app.js&quot;, &quot;index.php&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0020535" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: app.js, index.php
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;site.aspx&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0011113" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: site.aspx
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: True, existingFiles: [&quot;server.js&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0011895" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: server.js
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: True, existingFiles: [&quot;server.js&quot;, &quot;site.html&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0020169" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: server.js, site.html
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;server.js&quot;, &quot;index.html&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0019975" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: server.js, index.html
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;app.js&quot;, &quot;default.htm&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0019069" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: app.js, default.htm
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;server.js&quot;, &quot;index.htm&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.006047" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: server.js, index.htm
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;app.js&quot;, &quot;default.aspx&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0021424" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: app.js, default.aspx
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: True, existingFiles: [&quot;package.json&quot;, &quot;default.asp&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0018966" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: package.json, default.asp
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;server.js&quot;, &quot;default.html&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0018972" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: server.js, default.html
]]></output>
      </test>
      <test name="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests.TestLooksLikeNode(looksLikeNodeExpectedResult: False, existingFiles: [&quot;server.js&quot;, &quot;default.html&quot;])" type="Kudu.Core.Deployment.Generator.Test.NodeSiteEnablerTests" method="TestLooksLikeNode" time="0.0019821" result="Pass">
        <output><![CDATA[2017-08-29T15:21:49Z Testing: server.js, default.html
]]></output>
      </test>
      <test name="Kudu.Core.Test.AsyncStreamWriterFacts.AsyncStreamWriterBasicTests(input: &quot;&#xD;&#xA;pending&quot;, expects: [&quot;&quot;, &quot;pending&quot;])" type="Kudu.Core.Test.AsyncStreamWriterFacts" method="AsyncStreamWriterBasicTests" time="0.0104225" result="Pass" />
      <test name="Kudu.Core.Test.AsyncStreamWriterFacts.AsyncStreamWriterBasicTests(input: &quot;line&#xD;&#xA;&#xA;&quot;, expects: [&quot;line&quot;, &quot;&quot;])" type="Kudu.Core.Test.AsyncStreamWriterFacts" method="AsyncStreamWriterBasicTests" time="0.0000512" result="Pass" />
      <test name="Kudu.Core.Test.AsyncStreamWriterFacts.AsyncStreamWriterBasicTests(input: &quot;line&#xA;pending&quot;, expects: [&quot;line&quot;, &quot;pending&quot;])" type="Kudu.Core.Test.AsyncStreamWriterFacts" method="AsyncStreamWriterBasicTests" time="0.000021" result="Pass" />
      <test name="Kudu.Core.Test.AsyncStreamWriterFacts.AsyncStreamWriterBasicTests(input: &quot;pending&quot;, expects: [&quot;pending&quot;])" type="Kudu.Core.Test.AsyncStreamWriterFacts" method="AsyncStreamWriterBasicTests" time="0.0000187" result="Pass" />
      <test name="Kudu.Core.Test.AsyncStreamWriterFacts.AsyncStreamWriterBasicTests(input: &quot;line&#xD;&#xA;&quot;, expects: [&quot;line&quot;])" type="Kudu.Core.Test.AsyncStreamWriterFacts" method="AsyncStreamWriterBasicTests" time="0.0000176" result="Pass" />
      <test name="Kudu.Core.Test.AsyncStreamWriterFacts.AsyncStreamWriterBasicTests(input: &quot;line1&#xD;&#xA;line2&#xD;&#xA;&quot;, expects: [&quot;line1&quot;, &quot;line2&quot;])" type="Kudu.Core.Test.AsyncStreamWriterFacts" method="AsyncStreamWriterBasicTests" time="0.0000193" result="Pass" />
      <test name="Kudu.Core.Test.AsyncLockFileTests.LockAsync_ThrowsAfterTerminateAsyncLocks" type="Kudu.Core.Test.AsyncLockFileTests" method="LockAsync_ThrowsAfterTerminateAsyncLocks" time="0.0265352" result="Pass" />
      <test name="Kudu.Core.Test.AsyncLockFileTests.LockAsync_SequentialLockFollowedByRelease" type="Kudu.Core.Test.AsyncLockFileTests" method="LockAsync_SequentialLockFollowedByRelease" time="1.4035368" result="Pass" />
      <test name="Kudu.Core.Test.AsyncLockFileTests.AsyncLock_ThrowsIfNotInitialized" type="Kudu.Core.Test.AsyncLockFileTests" method="AsyncLock_ThrowsIfNotInitialized" time="0.0053541" result="Pass" />
      <test name="Kudu.Core.Test.AsyncLockFileTests.AsyncLock_ConcurrentLockFollowedByRelease" type="Kudu.Core.Test.AsyncLockFileTests" method="AsyncLock_ConcurrentLockFollowedByRelease" time="1.5967334" result="Pass" />
      <test name="Kudu.Core.Test.AsyncLockFileTests.AsyncLock_BasicTest" type="Kudu.Core.Test.AsyncLockFileTests" method="AsyncLock_BasicTest" time="0.1004192" result="Pass" />
      <test name="Kudu.Core.Test.AutoSwapHandlerFacts.IsAutoSwapOngoingOrEnabledTests" type="Kudu.Core.Test.AutoSwapHandlerFacts" method="IsAutoSwapOngoingOrEnabledTests" time="0.0047878" result="Pass" />
      <test name="Kudu.Core.Test.AutoSwapHandlerFacts.HandleAutoSwapTests" type="Kudu.Core.Test.AutoSwapHandlerFacts" method="HandleAutoSwapTests" time="0.1642478" result="Pass">
        <output><![CDATA[2017-08-29T15:21:53Z Autoswap will not happen, since it is not enabled.
2017-08-29T15:21:53Z Autoswap will not happen, since there is no HTTP_HOST env.
2017-08-29T15:21:53Z Autoswap will be triggered
]]></output>
      </test>
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleReadLineAsyncTests(actual: &quot;line&#xD;&#xA;pending&quot;, expecteds: [&quot;line&#xD;&#xA;&quot;, &quot;pending&quot;])" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleReadLineAsyncTests" time="0.0091434" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleReadLineAsyncTests(actual: &quot;line1&#xD;line2&#xD;&#xA;&quot;, expecteds: [&quot;line1&#xD;&quot;, &quot;line2&#xD;&#xA;&quot;])" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleReadLineAsyncTests" time="0.0000484" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleReadLineAsyncTests(actual: &quot;&#xD;pending&quot;, expecteds: [&quot;&#xD;&quot;, &quot;pending&quot;])" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleReadLineAsyncTests" time="0.000021" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleReadLineAsyncTests(actual: &quot;pending&quot;, expecteds: [&quot;pending&quot;])" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleReadLineAsyncTests" time="0.0000272" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleReadLineAsyncTests(actual: &quot;line&#xD;&#xA;&quot;, expecteds: [&quot;line&#xD;&#xA;&quot;])" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleReadLineAsyncTests" time="0.0000204" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleReadLineAsyncTests(actual: &quot;line&#xD;&quot;, expecteds: [&quot;line&#xD;&quot;])" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleReadLineAsyncTests" time="0.0000244" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleReadLineAsyncTests(actual: &quot;&#xD;&#xA;pending&quot;, expecteds: [&quot;&#xD;&#xA;&quot;, &quot;pending&quot;])" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleReadLineAsyncTests" time="0.000021" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleOnReceivedTests(connect: True)" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleOnReceivedTests" time="0.0722221" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleOnReceivedTests(connect: False)" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleOnReceivedTests" time="0.0011268" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleMaxProcessesTests" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleMaxProcessesTests" time="0.026619" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleOnConnectedTests" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleOnConnectedTests" time="0.0088463" result="Pass" />
      <test name="Kudu.Core.Test.DebugConsoleFacts.DebugConsoleOnDisconnectedTests" type="Kudu.Core.Test.DebugConsoleFacts" method="DebugConsoleOnDisconnectedTests" time="0.0113572" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHubFacts.FileSystemHubRegisterTests(update: False)" type="Kudu.Core.Test.FileSystemHubFacts" method="FileSystemHubRegisterTests" time="0.0424751" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHubFacts.FileSystemHubRegisterTests(update: True)" type="Kudu.Core.Test.FileSystemHubFacts" method="FileSystemHubRegisterTests" time="0.0019611" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHubFacts.FileSystemHubDisconnectTest" type="Kudu.Core.Test.FileSystemHubFacts" method="FileSystemHubDisconnectTest" time="0.0039877" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHubFacts.FileSystemHubMaxWatchers" type="Kudu.Core.Test.FileSystemHubFacts" method="FileSystemHubMaxWatchers" time="0.0113532" result="Pass" />
      <test name="Kudu.Core.Test.IdleManagerFacts.WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfIOActivity" type="Kudu.Core.Test.IdleManagerFacts" method="WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfIOActivity" time="0.1556346" result="Pass" />
      <test name="Kudu.Core.Test.IdleManagerFacts.WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuOrIOActivity" type="Kudu.Core.Test.IdleManagerFacts" method="WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuOrIOActivity" time="0.0931467" result="Pass" />
      <test name="Kudu.Core.Test.IdleManagerFacts.WaitForExitPollsKillsProcessIfProcessorTimeDoesNotChangeAndNotUpdated" type="Kudu.Core.Test.IdleManagerFacts" method="WaitForExitPollsKillsProcessIfProcessorTimeDoesNotChangeAndNotUpdated" time="0.2199662" result="Pass" />
      <test name="Kudu.Core.Test.IdleManagerFacts.WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuActivity" type="Kudu.Core.Test.IdleManagerFacts" method="WaitForExitPollsAllowsExecutableToContinueAfterTimeoutIfCpuActivity" time="0.0114325" result="Pass" />
      <test name="Kudu.Core.Test.IdleManagerFacts.WaitForExitWaitsForEOFPriorToExiting" type="Kudu.Core.Test.IdleManagerFacts" method="WaitForExitWaitsForEOFPriorToExiting" time="0.0045495" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsFalseForNonTrueLikeValues(value: &quot;2&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsFalseForNonTrueLikeValues" time="0.0374751" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsFalseForNonTrueLikeValues(value: &quot;12&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsFalseForNonTrueLikeValues" time="0.0003888" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsFalseForNonTrueLikeValues(value: &quot;true-NOT!&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsFalseForNonTrueLikeValues" time="0.0003273" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsFalseForNonTrueLikeValues(value: &quot;enabled&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsFalseForNonTrueLikeValues" time="0.0003153" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsFalseForNonTrueLikeValues(value: null)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsFalseForNonTrueLikeValues" time="0.0004333" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsFalseForNonTrueLikeValues(value: &quot;false&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsFalseForNonTrueLikeValues" time="0.000317" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsFalseForNonTrueLikeValues(value: &quot;&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsFalseForNonTrueLikeValues" time="0.0003164" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: &quot;&quot;, expected: 1800)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.006498" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: &quot; &quot;, expected: 1800)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.0000312" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: &quot;4&quot;, expected: 4)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: &quot;-0&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.000013" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: &quot;a&quot;, expected: 1800)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: &quot;0&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: &quot;-4&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.LogStreamTimeoutTests(value: null, expected: 1800)" type="Kudu.Core.Test.DeploymentSettingFacts" method="LogStreamTimeoutTests" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsTrueForTrueLikeValues(value: &quot;true&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsTrueForTrueLikeValues" time="0.0035845" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsTrueForTrueLikeValues(value: &quot;TRUE&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsTrueForTrueLikeValues" time="0.0003261" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.AllowShallowClonesReturnsTrueForTrueLikeValues(value: &quot;1&quot;)" type="Kudu.Core.Test.DeploymentSettingFacts" method="AllowShallowClonesReturnsTrueForTrueLikeValues" time="0.0003187" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: &quot; &quot;, expected: 1)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.0041543" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: null, expected: 1)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.000025" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: &quot;-0&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.0000204" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: &quot;&quot;, expected: 1)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: &quot;a&quot;, expected: 1)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: &quot;0&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: &quot;4&quot;, expected: 4)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.0000188" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.TraceLevelTests(value: &quot;-4&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="TraceLevelTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.SetBranchClearsLegacyKeyIfPresent" type="Kudu.Core.Test.DeploymentSettingFacts" method="SetBranchClearsLegacyKeyIfPresent" time="0.0060007" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: &quot;-0&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.0006221" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: &quot;-4&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.0000182" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: &quot; &quot;, expected: 60)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: &quot;0&quot;, expected: 0)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.000013" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: &quot;4&quot;, expected: 4)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: &quot;&quot;, expected: 60)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: &quot;a&quot;, expected: 60)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.CommandIdleTimeoutTests(value: null, expected: 60)" type="Kudu.Core.Test.DeploymentSettingFacts" method="CommandIdleTimeoutTests" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.GetBranchDoesNotUnifyValuesWithLegacyKey" type="Kudu.Core.Test.DeploymentSettingFacts" method="GetBranchDoesNotUnifyValuesWithLegacyKey" time="0.0025421" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.GetBranchUsesPersistedBranchValueIfAvailable" type="Kudu.Core.Test.DeploymentSettingFacts" method="GetBranchUsesPersistedBranchValueIfAvailable" time="0.003588" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.GetBranchUsesDeploymentBranchIfLegacyValueIsUnavailable" type="Kudu.Core.Test.DeploymentSettingFacts" method="GetBranchUsesDeploymentBranchIfLegacyValueIsUnavailable" time="0.0017443" result="Pass" />
      <test name="Kudu.Core.Test.DeploymentSettingFacts.GetBranchUsesLegacyBranchValueIfDeploymentBranchIsOnlyAvailableAsPartOfEnvironment" type="Kudu.Core.Test.DeploymentSettingFacts" method="GetBranchUsesLegacyBranchValueIfDeploymentBranchIsOnlyAvailableAsPartOfEnvironment" time="0.0034637" result="Pass" />
      <test name="Kudu.Core.Test.JsonSettingsFacts.ConstructorWithValuesTest" type="Kudu.Core.Test.JsonSettingsFacts" method="ConstructorWithValuesTest" time="0.1907803" result="Pass" />
      <test name="Kudu.Core.Test.JsonSettingsFacts.ConstructorTest" type="Kudu.Core.Test.JsonSettingsFacts" method="ConstructorTest" time="0.0161252" result="Pass" />
      <test name="Kudu.Core.Test.JsonSettingsFacts.SetGetValuesTest" type="Kudu.Core.Test.JsonSettingsFacts" method="SetGetValuesTest" time="0.0769348" result="Pass" />
      <test name="Kudu.Core.Test.JsonSettingsFacts.SetGetValueTest" type="Kudu.Core.Test.JsonSettingsFacts" method="SetGetValueTest" time="0.0270981" result="Pass" />
      <test name="Kudu.Core.Test.JsonSettingsFacts.NullOrEmptyTest" type="Kudu.Core.Test.JsonSettingsFacts" method="NullOrEmptyTest" time="0.016688" result="Pass" />
      <test name="Kudu.Core.Test.JsonSettingsFacts.SetGetJObjectTest" type="Kudu.Core.Test.JsonSettingsFacts" method="SetGetJObjectTest" time="0.018871" result="Pass" />
      <test name="Kudu.Core.Test.JsonSettingsFacts.DeleteValueTest" type="Kudu.Core.Test.JsonSettingsFacts" method="DeleteValueTest" time="0.0266756" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsFileSystemReadOnlyBasicTest" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsFileSystemReadOnlyBasicTest" time="0.0288443" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\..\temp\foo\..&quot;, child: &quot;x:\temp\Foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0006791" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\Foo\&quot;, child: &quot;x:\temp\foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000199" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\..\temp/foo\..&quot;, child: &quot;x:/temp\Foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000198" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo\..&quot;, child: &quot;x:\temp\Foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000164" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo/..&quot;, child: &quot;x:/temp\Foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000176" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo&quot;, child: &quot;x:\temp\Foo\bar&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000164" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo&quot;, child: &quot;x:\temp/Foo\&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.000017" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\Foo&quot;, child: &quot;x:\temp\foobar&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo&quot;, child: &quot;x:\temp\Foobar/&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000187" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp/Foo&quot;, child: &quot;x:\temp\foobar&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp/foo&quot;, child: &quot;x:\temp\Foo\..&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000176" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\bar&quot;, child: &quot;x:\temp\Foo&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\bar&quot;, child: &quot;x:/temp\Foo&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo&quot;, child: &quot;x:\temp\Foo\&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp/Foo\&quot;, child: &quot;x:\temp\foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo&quot;, child: &quot;x:\temp\Foobar\&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\Foo\bar&quot;, child: &quot;x:\temp/foo&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo&quot;, child: &quot;x:\temp\Foo\..&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo\&quot;, child: &quot;x:\temp\Foo\&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp/foo&quot;, child: &quot;x:\temp\Foo\bar&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\foo&quot;, child: &quot;x:\temp\Foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:\temp\Foo\bar&quot;, child: &quot;x:\temp\foo&quot;, expected: False)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000141" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:/temp\foo&quot;, child: &quot;x:\temp\Foo&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.IsSubfolderOfTests(parent: &quot;x:/temp\foo\&quot;, child: &quot;x:\temp\Foo\&quot;, expected: True)" type="Kudu.Core.Test.FileSystemHelpersTest" method="IsSubfolderOfTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.EnsureDirectoryCreatesDirectoryIfNotExists" type="Kudu.Core.Test.FileSystemHelpersTest" method="EnsureDirectoryCreatesDirectoryIfNotExists" time="0.00985" result="Pass" />
      <test name="Kudu.Core.Test.FileSystemHelpersTest.EnsureDirectoryDoesNotCreateDirectoryIfNotExists" type="Kudu.Core.Test.FileSystemHelpersTest" method="EnsureDirectoryDoesNotCreateDirectoryIfNotExists" time="0.0041007" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.RepositoryConcurrentInitialize(initialized: True)" type="Kudu.Core.Test.GitRepositoryTest" method="RepositoryConcurrentInitialize" time="0.0349306" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.RepositoryConcurrentInitialize(initialized: False)" type="Kudu.Core.Test.GitRepositoryTest" method="RepositoryConcurrentInitialize" time="1.051418" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.DecodeGitExeOutputToUtf8(original: &quot;&quot;\303\245benr\303\245/\303\245benr\303\245.csproj&quot;&quot;, expected: &quot;&quot;åbenrå/åbenrå.csproj&quot;&quot;)" type="Kudu.Core.Test.GitRepositoryTest" method="DecodeGitExeOutputToUtf8" time="0.002744" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.DecodeGitExeOutputToUtf8(original: &quot; a b c \d e f&quot;, expected: &quot; a b c \d e f&quot;)" type="Kudu.Core.Test.GitRepositoryTest" method="DecodeGitExeOutputToUtf8" time="0.0000142" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.DecodeGitExeOutputToUtf8(original: &quot;&quot;\303\245benr\303\245.sln&quot;&quot;, expected: &quot;&quot;åbenrå.sln&quot;&quot;)" type="Kudu.Core.Test.GitRepositoryTest" method="DecodeGitExeOutputToUtf8" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.GitExecuteWithRetryTest(message: &quot;This is non-retryable exception&quot;, expect: 1)" type="Kudu.Core.Test.GitRepositoryTest" method="GitExecuteWithRetryTest" time="0.0119639" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.GitExecuteWithRetryTest(message: &quot;error: The requested URL returned error: 403 while&quot;..., expect: 3)" type="Kudu.Core.Test.GitRepositoryTest" method="GitExecuteWithRetryTest" time="2.014005" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.GitExecuteWithRetryTest(message: &quot;fatal: The remote end hung up unexpectedly&quot;, expect: 3)" type="Kudu.Core.Test.GitRepositoryTest" method="GitExecuteWithRetryTest" time="2.0220427" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.GitExecuteWithRetryTest(message: &quot;fatal: HTTP request failed&quot;, expect: 3)" type="Kudu.Core.Test.GitRepositoryTest" method="GitExecuteWithRetryTest" time="2.03034" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.GitExecuteWithRetryTest(message: null, expect: 1)" type="Kudu.Core.Test.GitRepositoryTest" method="GitExecuteWithRetryTest" time="0.0021075" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.GitExecuteWithRetryTest(message: &quot;Unknown SSL protocol error in connection to github&quot;..., expect: 3)" type="Kudu.Core.Test.GitRepositoryTest" method="GitExecuteWithRetryTest" time="2.026371" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.ParseCommitParsesCommit" type="Kudu.Core.Test.GitRepositoryTest" method="ParseCommitParsesCommit" time="0.0035897" result="Pass" />
      <test name="Kudu.Core.Test.GitRepositoryTest.ParseCommitWithMultipleCommitsParsesOneCommit" type="Kudu.Core.Test.GitRepositoryTest" method="ParseCommitWithMultipleCommitsParsesOneCommit" time="0.0003626" result="Pass" />
      <test name="Kudu.Core.Test.LockFileTests.LockFailOnLockAcquiredTest" type="Kudu.Core.Test.LockFileTests" method="LockFailOnLockAcquiredTest" time="0.0054031" result="Pass" />
      <test name="Kudu.Core.Test.LockFileTests.LockFileRepositoryClearLockTest" type="Kudu.Core.Test.LockFileTests" method="LockFileRepositoryClearLockTest" time="0.0964297" result="Pass" />
      <test name="Kudu.Core.Test.LockFileTests.LockFileBasicTest" type="Kudu.Core.Test.LockFileTests" method="LockFileBasicTest" time="0.0741035" result="Pass" />
      <test name="Kudu.Core.Test.LockFileTests.LockFileConcurrentTest" type="Kudu.Core.Test.LockFileTests" method="LockFileConcurrentTest" time="0.2726194" result="Pass" />
      <test name="Kudu.Core.Test.NullRepositoryFacts.NullRepositoryCommitTests" type="Kudu.Core.Test.NullRepositoryFacts" method="NullRepositoryCommitTests" time="0.0229893" result="Pass" />
      <test name="Kudu.Core.Test.NullRepositoryFacts.NullRepositoryPathTests(expected: &quot;dummy&quot;, repositoryPath: &quot;dummy&quot;, noRepository: null)" type="Kudu.Core.Test.NullRepositoryFacts" method="NullRepositoryPathTests" time="0.000792" result="Pass" />
      <test name="Kudu.Core.Test.NullRepositoryFacts.NullRepositoryPathTests(expected: &quot;wwwroot&quot;, repositoryPath: null, noRepository: &quot;1&quot;)" type="Kudu.Core.Test.NullRepositoryFacts" method="NullRepositoryPathTests" time="0.0005879" result="Pass" />
      <test name="Kudu.Core.Test.NullRepositoryFacts.NullRepositoryPathTests(expected: &quot;repository&quot;, repositoryPath: null, noRepository: &quot;0&quot;)" type="Kudu.Core.Test.NullRepositoryFacts" method="NullRepositoryPathTests" time="0.0005736" result="Pass" />
      <test name="Kudu.Core.Test.NullRepositoryFacts.NullRepositoryPathTests(expected: &quot;dummy&quot;, repositoryPath: &quot;dummy&quot;, noRepository: &quot;1&quot;)" type="Kudu.Core.Test.NullRepositoryFacts" method="NullRepositoryPathTests" time="0.0005605" result="Pass" />
      <test name="Kudu.Core.Test.OperationLockTests.LockBasicWithResultTest(isHeld: False, expected: 1)" type="Kudu.Core.Test.OperationLockTests" method="LockBasicWithResultTest" time="0.0016" result="Pass" />
      <test name="Kudu.Core.Test.OperationLockTests.LockBasicWithResultTest(isHeld: True, expected: 0)" type="Kudu.Core.Test.OperationLockTests" method="LockBasicWithResultTest" time="0.001993" result="Pass" />
      <test name="Kudu.Core.Test.OperationLockTests.LockBasicTest(isHeld: True, expected: 0)" type="Kudu.Core.Test.OperationLockTests" method="LockBasicTest" time="0.0011661" result="Pass" />
      <test name="Kudu.Core.Test.OperationLockTests.LockBasicTest(isHeld: False, expected: 1)" type="Kudu.Core.Test.OperationLockTests" method="LockBasicTest" time="0.0001089" result="Pass" />
      <test name="Kudu.Core.Test.OperationLockTests.LockTimeoutTest" type="Kudu.Core.Test.OperationLockTests" method="LockTimeoutTest" time="5.0071858" result="Pass" />
      <test name="Kudu.Core.Test.OperationLockTests.LockMultipleTest" type="Kudu.Core.Test.OperationLockTests" method="LockMultipleTest" time="2.6157258" result="Pass" />
      <test name="Kudu.Core.Test.PathUtilityFacts.CleanFixesOtherSlashes" type="Kudu.Core.Test.PathUtilityFacts" method="CleanFixesOtherSlashes" time="0.0005137" result="Pass" />
      <test name="Kudu.Core.Test.PathUtilityFacts.CleanTrimsTrailingSlashes" type="Kudu.Core.Test.PathUtilityFacts" method="CleanTrimsTrailingSlashes" time="0.0002143" result="Pass" />
      <test name="Kudu.Core.Test.PathUtilityFacts.CleanTrimsWhiteSpaces" type="Kudu.Core.Test.PathUtilityFacts" method="CleanTrimsWhiteSpaces" time="0.000175" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.MiniDumpFreeModeTests" type="Kudu.Core.Test.ProcessApiFacts" method="MiniDumpFreeModeTests" time="0.3162962" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.MiniDumpDeleteOnDisposeTests" type="Kudu.Core.Test.ProcessApiFacts" method="MiniDumpDeleteOnDisposeTests" time="0.0158742" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.MiniDumpDeleteOnCloseTests" type="Kudu.Core.Test.ProcessApiFacts" method="MiniDumpDeleteOnCloseTests" time="0.0133366" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.GetProcessUserNameTests" type="Kudu.Core.Test.ProcessApiFacts" method="GetProcessUserNameTests" time="0.0138128" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.ProcesOutputBlockedTests" type="Kudu.Core.Test.ProcessApiFacts" method="ProcesOutputBlockedTests" time="2.0702148" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.StopProfileAsync_InvalidProcess" type="Kudu.Core.Test.ProcessApiFacts" method="StopProfileAsync_InvalidProcess" time="0.0194577" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.GetParentProcessTests" type="Kudu.Core.Test.ProcessApiFacts" method="GetParentProcessTests" time="0.0741747" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.ProcesStartBasicTests" type="Kudu.Core.Test.ProcessApiFacts" method="ProcesStartBasicTests" time="0.0140266" result="Pass" />
      <test name="Kudu.Core.Test.ProcessApiFacts.StartProfileAsync_InvalidProcess" type="Kudu.Core.Test.ProcessApiFacts" method="StartProfileAsync_InvalidProcess" time="0.0075935" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsScmSite_ReturnsExpectedResult(appPoolId: null, expectedValue: False)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsScmSite_ReturnsExpectedResult" time="0.0006438" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsScmSite_ReturnsExpectedResult(appPoolId: &quot;&quot;, expectedValue: False)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsScmSite_ReturnsExpectedResult" time="0.0000336" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsScmSite_ReturnsExpectedResult(appPoolId: &quot;NotSCMAppPool&quot;, expectedValue: False)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsScmSite_ReturnsExpectedResult" time="0.0000125" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsScmSite_ReturnsExpectedResult(appPoolId: &quot;~1SCMAppPool&quot;, expectedValue: True)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsScmSite_ReturnsExpectedResult" time="0.0000096" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsScmSite_ReturnsExpectedResult(appPoolId: &quot;~1SCMAppPool&quot;, expectedValue: True)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsScmSite_ReturnsExpectedResult" time="0.0000131" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetDescription_WebJob_ReturnsExpectedResult(webJobName: null, webJobType: &quot;Continuous&quot;, expectedValue: null)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetDescription_WebJob_ReturnsExpectedResult" time="0.0006192" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetDescription_WebJob_ReturnsExpectedResult(webJobName: &quot;TestJob&quot;, webJobType: &quot;Continuous&quot;, expectedValue: &quot;WebJob: TestJob, Type: Continuous&quot;)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetDescription_WebJob_ReturnsExpectedResult" time="0.0000119" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetDescription_WebJob_ReturnsExpectedResult(webJobName: &quot;&quot;, webJobType: &quot;&quot;, expectedValue: &quot;WebJob: , Type: &quot;)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetDescription_WebJob_ReturnsExpectedResult" time="0.0000102" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetDescription_WebJob_ReturnsExpectedResult(webJobName: &quot;TestJob&quot;, webJobType: null, expectedValue: null)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetDescription_WebJob_ReturnsExpectedResult" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetDescription_WebJob_ReturnsExpectedResult(webJobName: null, webJobType: null, expectedValue: null)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetDescription_WebJob_ReturnsExpectedResult" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsWebJob_ReturnsExpectedResult(webJobName: null, expectedValue: False)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsWebJob_ReturnsExpectedResult" time="0.0004686" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsWebJob_ReturnsExpectedResult(webJobName: &quot;TestWebJob&quot;, expectedValue: True)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsWebJob_ReturnsExpectedResult" time="0.0000125" result="Pass" />
      <test name="Kudu.Core.Test.ProcessExtensionsFacts.GetIsWebJob_ReturnsExpectedResult(webJobName: &quot;&quot;, expectedValue: True)" type="Kudu.Core.Test.ProcessExtensionsFacts" method="GetIsWebJob_ReturnsExpectedResult" time="0.0000108" result="Pass" />
      <test name="Kudu.Core.Test.PurgeDeploymentsTests.PurgeBasicTest(actual: [])" type="Kudu.Core.Test.PurgeDeploymentsTests" method="PurgeBasicTest" time="0.0373771" result="Pass" />
      <test name="Kudu.Core.Test.PurgeDeploymentsTests.PurgeBasicTest(actual: [DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }])" type="Kudu.Core.Test.PurgeDeploymentsTests" method="PurgeBasicTest" time="0.0115653" result="Pass" />
      <test name="Kudu.Core.Test.PurgeDeploymentsTests.PurgeBasicTest(actual: [DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }])" type="Kudu.Core.Test.PurgeDeploymentsTests" method="PurgeBasicTest" time="0.0013697" result="Pass" />
      <test name="Kudu.Core.Test.PurgeDeploymentsTests.PurgeBasicTest(actual: [DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }])" type="Kudu.Core.Test.PurgeDeploymentsTests" method="PurgeBasicTest" time="0.001157" result="Pass" />
      <test name="Kudu.Core.Test.PurgeDeploymentsTests.PurgeBasicTest(actual: [DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, ...])" type="Kudu.Core.Test.PurgeDeploymentsTests" method="PurgeBasicTest" time="0.0026328" result="Pass" />
      <test name="Kudu.Core.Test.PurgeDeploymentsTests.PurgeBasicTest(actual: [DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, ...])" type="Kudu.Core.Test.PurgeDeploymentsTests" method="PurgeBasicTest" time="0.0012818" result="Pass" />
      <test name="Kudu.Core.Test.PurgeDeploymentsTests.PurgeBasicTest(actual: [DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, DeployResult { Author = null, AuthorEmail = null, Complete = False, Current = False, Deployer = null, ... }, ...])" type="Kudu.Core.Test.PurgeDeploymentsTests" method="PurgeBasicTest" time="0.0011998" result="Pass" />
      <test name="Kudu.Core.Test.RepositoryFactoryFacts.EnsuringGitRepositoryThrowsIfDifferentRepositoryAlreadyExists" type="Kudu.Core.Test.RepositoryFactoryFacts" method="EnsuringGitRepositoryThrowsIfDifferentRepositoryAlreadyExists" time="0.0500145" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextDocumentFacts.StructuredDocumentLogsWithCorrectDepth(logEntry: &quot;log entry 1&quot;, depth: 0)" type="Kudu.Core.Test.StructuredTextDocumentFacts" method="StructuredDocumentLogsWithCorrectDepth" time="0.0223039" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextDocumentFacts.StructuredDocumentLogsWithCorrectDepth(logEntry: &quot;log entry 3&quot;, depth: 11)" type="Kudu.Core.Test.StructuredTextDocumentFacts" method="StructuredDocumentLogsWithCorrectDepth" time="0.0019383" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextDocumentFacts.StructuredDocumentLogsWithCorrectDepth(logEntry: &quot;log entry 2&quot;, depth: 5)" type="Kudu.Core.Test.StructuredTextDocumentFacts" method="StructuredDocumentLogsWithCorrectDepth" time="0.0017655" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextDocumentFacts.StructuredDocumentThrowsAFormatExceptionForInvalidLogEntries(logEntry: &quot;&#x9;Invalid log entry that starts with \t&quot;)" type="Kudu.Core.Test.StructuredTextDocumentFacts" method="StructuredDocumentThrowsAFormatExceptionForInvalidLogEntries" time="0.0013469" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextDocumentFacts.StructuredDocumentThrowsAFormatExceptionForInvalidLogEntries(logEntry: &quot;Invalid log entry &#xA; that contains a \n&quot;)" type="Kudu.Core.Test.StructuredTextDocumentFacts" method="StructuredDocumentThrowsAFormatExceptionForInvalidLogEntries" time="0.0001026" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextDocumentFacts.StructuredDocumentParsingTest" type="Kudu.Core.Test.StructuredTextDocumentFacts" method="StructuredDocumentParsingTest" time="0.0511015" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextLoggerFacts.StructuredTextLoggerLogFunction(message: &quot;This message is clean from any illegal characters&quot;, type: Message)" type="Kudu.Core.Test.StructuredTextLoggerFacts" method="StructuredTextLoggerLogFunction" time="0.0558928" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextLoggerFacts.StructuredTextLoggerLogFunction(message: &quot;This message has &quot;double quotes&quot; in it.&quot;, type: Error)" type="Kudu.Core.Test.StructuredTextLoggerFacts" method="StructuredTextLoggerLogFunction" time="0.0040562" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextLoggerFacts.StructuredTextLoggerLogFunction(message: &quot;This message has, commas, in, it.&quot;, type: Warning)" type="Kudu.Core.Test.StructuredTextLoggerFacts" method="StructuredTextLoggerLogFunction" time="0.003474" result="Pass" />
      <test name="Kudu.Core.Test.StructuredTextLoggerFacts.StructuredTextLoggerUsesHighestChildTypeToUpdateParentType" type="Kudu.Core.Test.StructuredTextLoggerFacts" method="StructuredTextLoggerUsesHighestChildTypeToUpdateParentType" time="0.0081209" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/triggeredwebjobs&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0451782" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/1/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0003283" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/1/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000182" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensionss/foo&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/siteextensionss&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments/3bad999c/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.000017" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/webjobs/1&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensions/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.000013" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments/3bad999c/log/aaca03ed/&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000272" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/webjobs/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000141" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/functions/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/webjobs&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000141" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/functions&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000135" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000141" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensions/foo/bar&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/functions/myfunc/foo/bar&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000238" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/continuouswebjobs/1/dump&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000164" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments/3bad999c&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000221" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/functions/myfunc/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000164" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/triggeredwebjobs/1/dump&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000187" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/functions/myfunc/foo&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensions/foo/bar/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deploymentss/log&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.000017" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/functions/myfunc&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000141" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/1/dump&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000164" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/1/dump&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000158" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/webjobs/1/dump&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000158" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments/3bad999c/log/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/webjobs/1/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/continuouswebjobs&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/deploymentss&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensions/foo&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/deployments&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/continuouswebjobs/1&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments/3bad999c/log/aaca03ed&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000278" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/continuouswebjobs/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/continuouswebjobs/1/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deploymentss&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0001105" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensions/foo/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000182" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/triggeredwebjobs/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000164" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/settings&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/1&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000199" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/processes/1&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000182" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments/3bad999c/log&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/deployments&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensionss&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000147" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/siteextensions&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/triggeredwebjobs/1&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000153" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/api/triggeredwebjobs/1/&quot;, expected: True)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000141" result="Pass" />
      <test name="Kudu.Core.Test.TraceModuleFacts.IsRbacWhiteListPathsTests(path: &quot;/siteextensions&quot;, expected: False)" type="Kudu.Core.Test.TraceModuleFacts" method="IsRbacWhiteListPathsTests" time="0.0000113" result="Pass" />
      <test name="Kudu.Core.Test.XmlLoggerFacts.XmlLoggerFileNotExistTest" type="Kudu.Core.Test.XmlLoggerFacts" method="XmlLoggerFileNotExistTest" time="0.0192479" result="Pass" />
      <test name="Kudu.Core.Test.XmlLoggerFacts.XmlLoggerBasicTest" type="Kudu.Core.Test.XmlLoggerFacts" method="XmlLoggerBasicTest" time="0.0617185" result="Pass" />
      <test name="Kudu.Core.Test.XmlLoggerFacts.XmlLoggerMalformedXmlTest" type="Kudu.Core.Test.XmlLoggerFacts" method="XmlLoggerMalformedXmlTest" time="0.0142621" result="Pass" />
      <test name="Kudu.Core.Test.EnvironmentFacts.DeploymentCachePathCreatesDirectoryIfItDoesNotExist" type="Kudu.Core.Test.EnvironmentFacts" method="DeploymentCachePathCreatesDirectoryIfItDoesNotExist" time="0.0151232" result="Pass" />
      <test name="Kudu.Core.Test.EnvironmentFacts.RepositoryPathCreatesDirectoryIfItDoesNotExist" type="Kudu.Core.Test.EnvironmentFacts" method="RepositoryPathCreatesDirectoryIfItDoesNotExist" time="0.0095631" result="Pass" />
      <test name="Kudu.Core.Test.EnvironmentFacts.SSHKeyPathCreatesDirectoryIfItDoesNotExist" type="Kudu.Core.Test.EnvironmentFacts" method="SSHKeyPathCreatesDirectoryIfItDoesNotExist" time="0.0092558" result="Pass" />
      <test name="Kudu.Core.Test.EnvironmentFacts.WebRootPathCreatesDirectoryIfItDoesNotExist" type="Kudu.Core.Test.EnvironmentFacts" method="WebRootPathCreatesDirectoryIfItDoesNotExist" time="0.0099173" result="Pass" />
      <test name="Kudu.Core.Test.EnvironmentFacts.ConstructorThrowsIfRepositoryPathResolverIsNull" type="Kudu.Core.Test.EnvironmentFacts" method="ConstructorThrowsIfRepositoryPathResolverIsNull" time="0.0051049" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.SkipRequestTracingTests(expected: True, rawUrl: &quot;/&quot;, userAgent: null)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="SkipRequestTracingTests" time="0.1054307" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.SkipRequestTracingTests(expected: False, rawUrl: &quot;/scm/info&quot;, userAgent: null)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="SkipRequestTracingTests" time="0.0009374" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.SkipRequestTracingTests(expected: False, rawUrl: &quot;/dump&quot;, userAgent: null)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="SkipRequestTracingTests" time="0.0005103" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.SkipRequestTracingTests(expected: True, rawUrl: &quot;/&quot;, userAgent: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/53&quot;...)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="SkipRequestTracingTests" time="0.0004921" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.SkipRequestTracingTests(expected: False, rawUrl: &quot;/coolapp.git/info/refs?service=git-receive-pack&quot;, userAgent: &quot;git/1.8.4.msysgit.0&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="SkipRequestTracingTests" time="0.0005325" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.SkipRequestTracingTests(expected: True, rawUrl: &quot;/vfs/&quot;, userAgent: &quot;Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; r&quot;...)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="SkipRequestTracingTests" time="0.0004898" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: True, header: &quot;Max-Forwards&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.0002936" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: False, header: &quot;Host&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.0000119" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: False, header: &quot;url&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.0000102" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: True, header: &quot;alwaysTrace&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.0000102" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: False, header: &quot;type&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: False, header: &quot;method&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: False, header: &quot;X-ARR-LOG-ID&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.0000078" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracingAttributeBlacklistTests(expected: True, header: &quot;traceLevel&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracingAttributeBlacklistTests" time="0.000009" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.MismatchHostRefererTests(expected: False, referer: null)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="MismatchHostRefererTests" time="0.0071435" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.MismatchHostRefererTests(expected: True, referer: &quot;https://attacker.org/&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="MismatchHostRefererTests" time="0.0011085" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.MismatchHostRefererTests(expected: False, referer: &quot;https://tempuri.org/&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="MismatchHostRefererTests" time="0.0005326" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.MismatchHostRefererTests(expected: True, referer: &quot;null&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="MismatchHostRefererTests" time="0.000565" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.IsAjaxRequestTests(expected: False, header: null)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="IsAjaxRequestTests" time="0.0012944" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.IsAjaxRequestTests(expected: False, header: null)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="IsAjaxRequestTests" time="0.0003039" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.IsAjaxRequestTests(expected: True, header: &quot;XMLHttpRequest&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="IsAjaxRequestTests" time="0.0003176" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.IsAjaxRequestTests(expected: False, header: &quot;unknown&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="IsAjaxRequestTests" time="0.0002902" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.IsAjaxRequestTests(expected: False, header: &quot;&quot;)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="IsAjaxRequestTests" time="0.0002856" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracerMaxXmlFilesTest" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracerMaxXmlFilesTest" time="0.3712583" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: True, level: Verbose, info: null, statusCode: 200)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0002668" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: True, level: Error, info: TraceInfo { Attributes = [], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 200)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0000176" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: True, level: Error, info: TraceInfo { Attributes = [[type, request], [method, POST], [url, /api/webjobs]], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 200)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0000159" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: True, level: Error, info: TraceInfo { Attributes = [[type, request], [method, GET], [url, /api/webjobs]], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 500)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0000119" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: False, level: Error, info: TraceInfo { Attributes = [[type, request], [method, GET], [url, /api/settings]], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 304)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0000107" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: False, level: Error, info: TraceInfo { Attributes = [[type, request], [method, GET], [url, /api/webjobs]], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 200)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0001048" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: False, level: Error, info: TraceInfo { Attributes = [[type, request], [method, GET], [url, /api/siteextensions?a=b]], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 200)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0000176" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: False, level: Error, info: TraceInfo { Attributes = [[type, request], [method, GET], [url, /api/processes]], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 200)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.0000124" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TraceFiltersTests(expected: False, level: Error, info: TraceInfo { Attributes = [[type, request], [method, GET], [url, /api/deployments?a=b]], StartTime = 2017-08-29T15:22:15.3858712Z, Title = &quot;title&quot; }, statusCode: 200)" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TraceFiltersTests" time="0.000013" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracerRequestsTest(traceLevel: Off, requests: [RequestInfo { StatusCode = OK, Traced = False, Url = &quot;/any1&quot; }, RequestInfo { StatusCode = BadRequest, Traced = False, Url = &quot;/any2&quot; }])" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracerRequestsTest" time="0.0143123" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracerRequestsTest(traceLevel: Verbose, requests: [RequestInfo { StatusCode = OK, Traced = True, Url = &quot;/any1&quot; }, RequestInfo { StatusCode = OK, Traced = True, Url = &quot;/deployments?a=1&quot; }, RequestInfo { StatusCode = OK, Traced = True, Url = &quot;/any2&quot; }, RequestInfo { StatusCode = NotModified, Traced = True, Url = &quot;/deployments?a=2&quot; }])" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracerRequestsTest" time="0.0168585" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.XmlTracerTests.TracerRequestsTest(traceLevel: Error, requests: [RequestInfo { StatusCode = OK, Traced = True, Url = &quot;/any1&quot; }, RequestInfo { StatusCode = OK, Traced = True, Url = &quot;/deployments?a=1&quot; }, RequestInfo { StatusCode = OK, Traced = True, Url = &quot;/any2&quot; }, RequestInfo { StatusCode = NotModified, Traced = False, Url = &quot;/deployments?a=2&quot; }, RequestInfo { StatusCode = NotModified, Traced = False, Url = &quot;/vfs/any3&quot; }])" type="Kudu.Core.Test.Tracing.XmlTracerTests" method="TracerRequestsTest" time="0.0117752" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests.SiteExtensionLogManagerShouldLogOneEventToFile" type="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests" method="SiteExtensionLogManagerShouldLogOneEventToFile" time="0.0622324" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests.SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded" type="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests" method="SiteExtensionLogManagerShouldNotCleanupLogIfNotNeeded" time="0.016586" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests.SiteExtensionLogManagerShouldLogSeveralEventsToFile" type="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests" method="SiteExtensionLogManagerShouldLogSeveralEventsToFile" time="0.0040819" result="Pass" />
      <test name="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests.SiteExtensionLogManagerShouldCleanupLogIfNeeded" type="Kudu.Core.Test.Tracing.SiteExtensionLogManagerTests" method="SiteExtensionLogManagerShouldCleanupLogIfNeeded" time="0.0288402" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsMiddlePriorityOverridesLastPriority" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsMiddlePriorityOverridesLastPriority" time="0.0022855" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsTopPriorityOverridesLastPriority" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsTopPriorityOverridesLastPriority" time="0.0001134" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsTopPriorityOverridesAllOthers" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsTopPriorityOverridesAllOthers" time="0.0000871" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsMiddlePriorityUsedWhenNoOthers" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsMiddlePriorityUsedWhenNoOthers" time="0.0000826" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsNullWhenKeyDoesNotExist" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsNullWhenKeyDoesNotExist" time="0.0001522" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsTopPriorityUsedWhenNoOthers" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsTopPriorityUsedWhenNoOthers" time="0.0000826" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsLastPriorityUsedWhenNoOthers" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsLastPriorityUsedWhenNoOthers" time="0.0000791" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests.DeploymentSettingsTopPriorityOverridesMiddlePriority" type="Kudu.Core.Test.Settings.DeploymentSettingsPrioritiesTests" method="DeploymentSettingsTopPriorityOverridesMiddlePriority" time="0.0000797" result="Pass" />
      <test name="Kudu.Core.Test.Settings.DiagnosticsSettingsManagerTests.BasicReadWriteTests" type="Kudu.Core.Test.Settings.DiagnosticsSettingsManagerTests" method="BasicReadWriteTests" time="0.1636132" result="Pass" />
      <test name="Kudu.Core.Test.Settings.SettingsProvidersTests.TestEnvironmentSettingsProvider" type="Kudu.Core.Test.Settings.SettingsProvidersTests" method="TestEnvironmentSettingsProvider" time="0.0135721" result="Pass" />
      <test name="Kudu.Core.Test.Settings.SettingsProvidersTests.TestPerSiteSettingsProvider" type="Kudu.Core.Test.Settings.SettingsProvidersTests" method="TestPerSiteSettingsProvider" time="0.0242707" result="Pass" />
      <test name="Kudu.Core.Test.Settings.SettingsProvidersTests.TestDefaultSettingsProvider" type="Kudu.Core.Test.Settings.SettingsProvidersTests" method="TestDefaultSettingsProvider" time="0.0005553" result="Pass" />
      <test name="Kudu.Core.Test.Settings.SettingsProvidersTests.TestDeploymentSettingsProvider" type="Kudu.Core.Test.Settings.SettingsProvidersTests" method="TestDeploymentSettingsProvider" time="0.0054191" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_FileModifiedInSubDir_ReturnsTrue" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_FileModifiedInSubDir_ReturnsTrue" time="0.044532" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_FileDeletedInWorkingDir_ReturnsTrue" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_FileDeletedInWorkingDir_ReturnsTrue" time="0.016169" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_IsCaseInsensitive" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_IsCaseInsensitive" time="0.0137859" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_FileAddedInWorkingDir_ReturnsFalse" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_FileAddedInWorkingDir_ReturnsFalse" time="0.0137118" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_FileModifiedInWorkingDir_ReturnsTrue" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_FileModifiedInWorkingDir_ReturnsTrue" time="0.014432" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_FileDeleted_ReturnsTrue" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_FileDeleted_ReturnsTrue" time="0.0145797" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.UpdateAppConfigs_DoesNotModifyLastWriteTime" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="UpdateAppConfigs_DoesNotModifyLastWriteTime" time="0.3678693" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_FileAddedInRootDir_ReturnsTrue" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_FileAddedInRootDir_ReturnsTrue" time="0.0151557" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.BaseJobRunnerFacts.JobDirectoryHasChanged_NoChanges_CachedEntries_ReturnsFalse" type="Kudu.Core.Test.Jobs.BaseJobRunnerFacts" method="JobDirectoryHasChanged_NoChanges_CachedEntries_ReturnsFalse" time="0.0136337" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.CheckAlwaysOn_OnlyLogsOncePerLogFile" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="CheckAlwaysOn_OnlyLogsOncePerLogFile" time="0.0217502" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.AlwaysOnNotEnabled_ReturnsExpectedValue(alwaysOnEnvironmentValue: &quot;1&quot;, expected: False)" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="AlwaysOnNotEnabled_ReturnsExpectedValue" time="0.0036158" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.AlwaysOnNotEnabled_ReturnsExpectedValue(alwaysOnEnvironmentValue: null, expected: False)" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="AlwaysOnNotEnabled_ReturnsExpectedValue" time="0.0032703" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.AlwaysOnNotEnabled_ReturnsExpectedValue(alwaysOnEnvironmentValue: &quot;&quot;, expected: False)" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="AlwaysOnNotEnabled_ReturnsExpectedValue" time="0.0032612" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.AlwaysOnNotEnabled_ReturnsExpectedValue(alwaysOnEnvironmentValue: &quot;0&quot;, expected: True)" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="AlwaysOnNotEnabled_ReturnsExpectedValue" time="0.0031939" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.CheckAlwaysOn_Continuous_LogsWarning_WhenAlwaysOnNotEnabled(alwaysOnEnabled: False)" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="CheckAlwaysOn_Continuous_LogsWarning_WhenAlwaysOnNotEnabled" time="0.0043476" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.CheckAlwaysOn_Continuous_LogsWarning_WhenAlwaysOnNotEnabled(alwaysOnEnabled: True)" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="CheckAlwaysOn_Continuous_LogsWarning_WhenAlwaysOnNotEnabled" time="0.0035811" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts.RefreshJob_Continuous_LogsWarning_WhenAlwaysOnNotEnabled" type="Kudu.Core.Test.Jobs.ContinuousJobRunnerFacts" method="RefreshJob_Continuous_LogsWarning_WhenAlwaysOnNotEnabled" time="0.1372431" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ContinuousJobsManagerFacts.CloneRequestTestCase(port: 4567, path: &quot;path/to/webjob/function&quot;, content: &quot;{&quot;key&quot;: &quot;value&quot;}&quot;)" type="Kudu.Core.Test.Jobs.ContinuousJobsManagerFacts" method="CloneRequestTestCase" time="0.03706" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;0 */2 * * * *&quot;, lastScheduleStr: &quot;23:47:00 12/31/2014&quot;, expectedNextIntervalStr: &quot;00:02:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0896516" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;* * * * 3 *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;59.00:00:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0007714" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;10 * * * * *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;00:00:10&quot;, ignoreMissed: True)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.000435" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;* * * 3 * *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;2.00:00:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004288" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;0 0 2 * * *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;02:00:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004271" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;* * * * 2 *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;31.00:00:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004236" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;0 */5 * * * *&quot;, lastScheduleStr: &quot;23:00:00 12/31/2014&quot;, expectedNextIntervalStr: &quot;00:05:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004915" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;10 * * * * *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;00:00:10&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0062665" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;0 */2 * * * *&quot;, lastScheduleStr: &quot;23:47:00 12/31/2014&quot;, expectedNextIntervalStr: &quot;00:00:00&quot;, ignoreMissed: True)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.000455" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;0 */2 * * * *&quot;, lastScheduleStr: &quot;23:57:00 12/31/2014&quot;, expectedNextIntervalStr: &quot;00:00:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004231" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;10 * * * * *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2014&quot;, expectedNextIntervalStr: &quot;00:00:10&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.9038798" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;* * * * 4 *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;90.00:00:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0006842" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;5 1 * * * *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;00:01:05&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004322" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;0 */2 * * * *&quot;, lastScheduleStr: &quot;23:49:00 12/31/2014&quot;, expectedNextIntervalStr: &quot;00:00:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004436" result="Pass" />
      <test name="Kudu.Core.Test.Jobs.ScheduleFacts.ScheduleProvidesNextIntervalCorrectly(cronExpression: &quot;0 1 * * * *&quot;, lastScheduleStr: &quot;00:00:00 1/1/2015&quot;, expectedNextIntervalStr: &quot;00:01:00&quot;, ignoreMissed: False)" type="Kudu.Core.Test.Jobs.ScheduleFacts" method="ScheduleProvidesNextIntervalCorrectly" time="0.0004168" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;Hello world&quot;)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0002109" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;&quot;...)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0000409" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;foo𝄞bar&quot;)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;Hello&#xA;world&quot;)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0000079" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;휀휁휂휃휄휅휆휇휈휉휊휋휌휍휎휏휐휑휒휓휔휕휖휗휘휙휚휛휜휝휞휟휠휡휢휣휤휥휦휧휨휩휪휫휬휭휮휯휰휱&quot;...)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0000165" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;Hello&#x9;world&quot;)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;Hello&#xD;&#xA;world&quot;)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0000084" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityReturnsValidCharacterStringsUnchanged(input: &quot;＀！＂＃＄％＆＇（）＊＋，－．／０１２３４５６７８９：；＜＝＞？＠ＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱ&quot;...)" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityReturnsValidCharacterStringsUnchanged" time="0.0000136" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.XmlUtilityRemovesInvalidCharacters" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="XmlUtilityRemovesInvalidCharacters" time="0.0015116" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.TestXmlUtilityGlob" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="TestXmlUtilityGlob" time="0.0001248" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.TestXmlUtilityDC00" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="TestXmlUtilityDC00" time="0.0001733" result="Pass" />
      <test name="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts.TestXmlUtilityEmptyString" type="Kudu.Core.Test.Infrastructure.cs.XmlUtilityFacts" method="TestXmlUtilityEmptyString" time="0.0001242" result="Pass" />
      <test name="Kudu.Core.Test.Functions.FunctionManagerTests.DeterminePrimaryScriptFileNotSpecifiedTests(expect: &quot;c:\functions\functionScript.py&quot;, files: [&quot;function.json&quot;, &quot;functionScript.py&quot;])" type="Kudu.Core.Test.Functions.FunctionManagerTests" method="DeterminePrimaryScriptFileNotSpecifiedTests" time="0.0470355" result="Pass" />
      <test name="Kudu.Core.Test.Functions.FunctionManagerTests.DeterminePrimaryScriptFileNotSpecifiedTests(expect: &quot;c:\functions\run.csx&quot;, files: [&quot;function.json&quot;, &quot;run.csx&quot;, &quot;test.dat&quot;])" type="Kudu.Core.Test.Functions.FunctionManagerTests" method="DeterminePrimaryScriptFileNotSpecifiedTests" time="0.004315" result="Pass" />
      <test name="Kudu.Core.Test.Functions.FunctionManagerTests.DeterminePrimaryScriptFileNotSpecifiedTests(expect: null, files: [&quot;function.json&quot;, &quot;randomFileA.txt&quot;, &quot;randomFileB.txt&quot;])" type="Kudu.Core.Test.Functions.FunctionManagerTests" method="DeterminePrimaryScriptFileNotSpecifiedTests" time="0.0053786" result="Pass" />
      <test name="Kudu.Core.Test.Functions.FunctionManagerTests.DeterminePrimaryScriptFileNotSpecifiedTests(expect: null, files: [&quot;function.json&quot;])" type="Kudu.Core.Test.Functions.FunctionManagerTests" method="DeterminePrimaryScriptFileNotSpecifiedTests" time="0.004558" result="Pass" />
      <test name="Kudu.Core.Test.Functions.FunctionManagerTests.DeterminePrimaryScriptFileNotSpecifiedTests(expect: &quot;c:\functions\index.js&quot;, files: [&quot;function.json&quot;, &quot;index.js&quot;, &quot;test1.dat&quot;, &quot;test2.dat&quot;])" type="Kudu.Core.Test.Functions.FunctionManagerTests" method="DeterminePrimaryScriptFileNotSpecifiedTests" time="0.0040128" result="Pass" />
      <test name="Kudu.Core.Test.Functions.FunctionManagerTests.DeterminePrimaryScriptFileSpecifiedTests(functionConfigStr: &quot;{&quot;scriptFile&quot;: &quot;subDirectory\\compiled.dll&quot;}&quot;, expect: &quot;c:\functions\subDirectory\compiled.dll&quot;)" type="Kudu.Core.Test.Functions.FunctionManagerTests" method="DeterminePrimaryScriptFileSpecifiedTests" time="0.0102925" result="Pass" />
      <test name="Kudu.Core.Test.Functions.FunctionManagerTests.DeterminePrimaryScriptFileSpecifiedTests(functionConfigStr: &quot;{&quot;scriptFile&quot;: &quot;random.text&quot;}&quot;, expect: null)" type="Kudu.Core.Test.Functions.FunctionManagerTests" method="DeterminePrimaryScriptFileSpecifiedTests" time="0.0042187" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.InvalidCommitTextTests" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="InvalidCommitTextTests" time="0.1023114" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.GetOrCreateStatusFileUpdatesFileIfItAlreadyExists" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="GetOrCreateStatusFileUpdatesFileIfItAlreadyExists" time="0.0231599" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.ReturnEmptyCollectionOnLogEntryIdDoesntExist" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="ReturnEmptyCollectionOnLogEntryIdDoesntExist" time="0.0233292" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.CorruptedDeploymentStatusFileTests(content: null, expectedNull: True, expectedError: &quot;&quot;)" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="CorruptedDeploymentStatusFileTests" time="0.0250058" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.CorruptedDeploymentStatusFileTests(content: &quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xD;&#xA;&lt;deploymen&quot;..., expectedNull: True, expectedError: &quot;Open&quot;)" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="CorruptedDeploymentStatusFileTests" time="0.0146254" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.CorruptedDeploymentStatusFileTests(content: &quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xD;&#xA;&lt;deploymen&quot;..., expectedNull: False, expectedError: &quot;&quot;)" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="CorruptedDeploymentStatusFileTests" time="0.0134843" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.CorruptedDeploymentStatusFileTests(content: &quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xD;&#xA;&lt;deploymen&quot;..., expectedNull: True, expectedError: &quot;Open&quot;)" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="CorruptedDeploymentStatusFileTests" time="0.014127" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.DeploymentManagerFacts.GetOrCreateStatusFileCreatesFileIfItDoesNotAlreadyExist" type="Kudu.Core.Test.Deployment.DeploymentManagerFacts" method="GetOrCreateStatusFileCreatesFileIfItDoesNotAlreadyExist" time="0.0093197" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.WebHooksManagerTests.Add3WebHooksShouldSucceed" type="Kudu.Core.Test.Deployment.WebHooksManagerTests" method="Add3WebHooksShouldSucceed" time="0.1883048" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.WebHooksManagerTests.AddSameAddressWebHookWithSameHookEventTypeShouldSucceed" type="Kudu.Core.Test.Deployment.WebHooksManagerTests" method="AddSameAddressWebHookWithSameHookEventTypeShouldSucceed" time="0.0478355" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.WebHooksManagerTests.RemoveWebHookShouldSucceed" type="Kudu.Core.Test.Deployment.WebHooksManagerTests" method="RemoveWebHookShouldSucceed" time="0.049126" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.WebHooksManagerTests.AddWebHookShouldSucceed" type="Kudu.Core.Test.Deployment.WebHooksManagerTests" method="AddWebHookShouldSucceed" time="0.0128655" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.WebHooksManagerTests.AddWebHookWithInvalidAddressShouldThrowFormatException" type="Kudu.Core.Test.Deployment.WebHooksManagerTests" method="AddWebHookWithInvalidAddressShouldThrowFormatException" time="0.0136092" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.WebHooksManagerTests.AddSameAddressWebHookWithDifferentHookEventTypeShouldThrowConflictException" type="Kudu.Core.Test.Deployment.WebHooksManagerTests" method="AddSameAddressWebHookWithDifferentHookEventTypeShouldThrowConflictException" time="0.0330351" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.WebHooksManagerTests.RemoveWebHookForNotFoundAddressShouldSucceed" type="Kudu.Core.Test.Deployment.WebHooksManagerTests" method="RemoveWebHookForNotFoundAddressShouldSucceed" time="0.0040955" result="Pass" />
      <test name="Kudu.Core.Test.Deployment.Generator.ExternalCommandBuilderFacts.GetPostBuildActionScriptsShouldReturnDefaultFiles" type="Kudu.Core.Test.Deployment.Generator.ExternalCommandBuilderFacts" method="GetPostBuildActionScriptsShouldReturnDefaultFiles" time="0.0593725" result="Pass">
        <output><![CDATA[2017-08-29T15:22:18Z Should return action script from default folder
2017-08-29T15:22:18Z Override SCM_POST_DEPLOYMENT_ACTIONS_PATH to a custom location
2017-08-29T15:22:18Z Should return action script from custom folder
]]></output>
      </test>
      <test name="Kudu.Core.Test.Deployment.Generator.ExternalCommandBuilderFacts.GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions" type="Kudu.Core.Test.Deployment.Generator.ExternalCommandBuilderFacts" method="GetPostBuildActionScriptsShouldReturnActionScriptFromSiteExtensions" time="0.0603294" result="Pass" />
      <test name="Kudu.Core.Test.AuthUtilityFacts+TryExtractBasicAuthUserFromHeader.FailsToParseIfHeaderIsSchemeNotBasic" type="Kudu.Core.Test.AuthUtilityFacts+TryExtractBasicAuthUserFromHeader" method="FailsToParseIfHeaderIsSchemeNotBasic" time="0.00076" result="Pass" />
      <test name="Kudu.Core.Test.AuthUtilityFacts+TryExtractBasicAuthUserFromHeader.ParsesBasicAuthHeader" type="Kudu.Core.Test.AuthUtilityFacts+TryExtractBasicAuthUserFromHeader" method="ParsesBasicAuthHeader" time="0.0006226" result="Pass" />
      <test name="Kudu.Core.Test.AuthUtilityFacts+TryExtractBasicAuthUserFromHeader.FailsToParseIfHeaderIsNull" type="Kudu.Core.Test.AuthUtilityFacts+TryExtractBasicAuthUserFromHeader" method="FailsToParseIfHeaderIsNull" time="0.0002623" result="Pass" />
      <test name="Kudu.Core.Test.AuthUtilityFacts+TryParseBasicAuthUserFromHeaderParameter.ParsesUsername" type="Kudu.Core.Test.AuthUtilityFacts+TryParseBasicAuthUserFromHeaderParameter" method="ParsesUsername" time="0.0003164" result="Pass" />
      <test name="Kudu.Core.Test.AuthUtilityFacts+TryParseBasicAuthUserFromHeaderParameter.FailsToParseIfNoUsername" type="Kudu.Core.Test.AuthUtilityFacts+TryParseBasicAuthUserFromHeaderParameter" method="FailsToParseIfNoUsername" time="0.0003135" result="Pass" />
      <test name="Kudu.Core.Test.AuthUtilityFacts+TryParseBasicAuthUserFromHeaderParameter.FailsToParseIfNoSeparator" type="Kudu.Core.Test.AuthUtilityFacts+TryParseBasicAuthUserFromHeaderParameter" method="FailsToParseIfNoSeparator" time="0.000289" result="Pass" />
      <test name="Kudu.Core.Test.IniFileFacts+ParseValues.SectionWithEmptyKeySkipped" type="Kudu.Core.Test.IniFileFacts+ParseValues" method="SectionWithEmptyKeySkipped" time="0.0006934" result="Pass" />
      <test name="Kudu.Core.Test.IniFileFacts+ParseValues.ParsesMultipleEqualSigns" type="Kudu.Core.Test.IniFileFacts+ParseValues" method="ParsesMultipleEqualSigns" time="0.0006403" result="Pass" />
      <test name="Kudu.Core.Test.IniFileFacts+ParseValues.ParsesSectionsIntoKeyValuePairs" type="Kudu.Core.Test.IniFileFacts+ParseValues" method="ParsesSectionsIntoKeyValuePairs" time="0.0027343" result="Pass" />
      <test name="Kudu.Core.Test.IniFileFacts+ParseValues.ParseInvalidPair" type="Kudu.Core.Test.IniFileFacts+ParseValues" method="ParseInvalidPair" time="0.000634" result="Pass" />
      <test name="Kudu.Core.Test.IniFileFacts+ParseValues.EmptySectionIgnored" type="Kudu.Core.Test.IniFileFacts+ParseValues" method="EmptySectionIgnored" time="0.0003244" result="Pass" />
    </collection>
  </assembly>
</assemblies>